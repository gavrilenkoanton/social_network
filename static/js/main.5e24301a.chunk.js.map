{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/navbar/Navbar.module.css","App.module.css","components/profile/myposts/Posts.module.css","components/profile/ProfileInfo/ProfileInfo.module.css","components/header/Header.module.css","components/profile/myposts/post/Post.module.css","components/profile/Profile.module.css","components/Settings/Settings.module.css","components/Music/Music.module.css","components/News/News.module.css","components/header/Header.jsx","components/navbar/Navbar.jsx","components/profile/myposts/post/Post.jsx","Redux/profile-reducer.js","components/profile/myposts/Posts.jsx","components/profile/ProfileInfo/ProfileInfo.jsx","components/profile/myposts/PostsContainer.jsx","components/profile/Profile.jsx","Redux/dialogs-reducer.js","components/Dialogs/Dialogs.jsx","components/Settings/Settings.jsx","components/Music/Music.jsx","components/News/News.jsx","Redux/store.js","components/Dialogs/DialogsContainer.jsx","App.jsx","serviceWorker.js","Redux/redux-store.js","index.jsx"],"names":["module","exports","Header","className","styles","header","Friends","props","path","id","navBarFriends","to","src","img","name","Navbar","bestFriends","state","dialogsData","slice","map","dialog","navBarStyles","activeClassName","active","Post","post","alt","message","likesCount","initialState","posts","newPostText","profileReducer","action","type","push","newText","Posts","newPostElement","React","createRef","postElements","profilePage","p","postsBlock","cols","rows","ref","onChange","text","current","value","updateNewPostText","onClick","addPost","ProfileInfo","image","descriptionBlock","PostsContainer","store","getState","dispatch","updateNewPostTextActionCreator","Profile","messagesData","mesid","newMessageText","dialogsReducer","DialogItem","dialogsImg","Message","message1","message2","Dialogs","dialogsElements","messageElements","dialogs","dialogsItems","messages","inputDialogs","e","target","sendMessage","Settings","Music","News","_state","messagesPage","_callSubscriber","console","log","this","subscribe","observer","window","DialogsContainer","App","wrapper","navbar","profile","exact","render","component","Boolean","location","hostname","match","reducers","combineReducers","createStore","rerenderEntireTree","ReactDOM","bind","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,WAAa,4BAA4B,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,SAAW,0BAA0B,SAAW,0BAA0B,aAAe,gC,gBCA3UD,EAAOC,QAAU,CAAC,aAAe,6BAA6B,OAAS,uBAAuB,cAAgB,gC,mBCA9GD,EAAOC,QAAU,CAAC,QAAU,qBAAqB,OAAS,oBAAoB,OAAS,oBAAoB,QAAU,uB,gBCArHD,EAAOC,QAAU,CAAC,WAAa,0BAA0B,MAAQ,uB,mBCAjED,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,iBAAmB,wC,sBCAxED,EAAOC,QAAU,CAAC,OAAS,yB,kBCA3BD,EAAOC,QAAU,CAAC,KAAO,qB,4ECAzBD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,OAAS,2B,gBCA3BD,EAAOC,QAAU,CAAC,OAAS,wB,gBCA3BD,EAAOC,QAAU,CAAC,OAAS,uB,oHCUZC,MARf,WACI,OACI,4BAAQC,UAAWC,IAAOC,U,uBCD5BC,EAAU,SAACC,GACb,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKN,UAAWC,IAAOM,eAAe,kBAAC,IAAD,CAASC,GAAIH,GAAM,yBAAKI,IAAKL,EAAMM,MAAON,EAAMO,QAwB/EC,MApBf,SAAgBR,GACZ,IACIS,EADiBT,EAAMU,MAAMC,YAAYC,MAAM,EAAE,GACnBC,KAAI,SAAAC,GAAM,OAAI,kBAAC,EAAD,CAASP,KAAMO,EAAOP,KAAML,GAAIY,EAAOZ,GAAII,IAAKQ,EAAOR,SAGvG,OACI,yBAAKV,UAAWC,IAAOkB,cACnB,6BAAK,kBAAC,IAAD,CAASX,GAAG,WAAWY,gBAAiBnB,IAAOoB,QAA/C,aACL,6BAAK,kBAAC,IAAD,CAASb,GAAG,WAAWY,gBAAiBnB,IAAOoB,QAA/C,cACL,6BAAK,kBAAC,IAAD,CAASb,GAAG,QAAQY,gBAAiBnB,IAAOoB,QAA5C,SACL,6BAAK,kBAAC,IAAD,CAASb,GAAG,SAASY,gBAAiBnB,IAAOoB,QAA7C,WACL,6BAAK,kBAAC,IAAD,CAASb,GAAG,YAAYY,gBAAiBnB,IAAOoB,QAAhD,cACL,kCACA,6BAAK,kBAAC,IAAD,CAASb,GAAG,WAAWY,gBAAiBnB,IAAOoB,QAA/C,YAAiER,M,0CCPnES,MAbf,SAAclB,GACV,OACI,yBAAKJ,UAAWC,IAAOsB,MACnB,yBACId,IAAI,8HACJe,IAAI,KACPpB,EAAMqB,QACP,6BACA,yCAAqBrB,EAAMsB,aCTnCC,EAAe,CACfC,MAAO,CACH,CAACtB,GAAI,EAAGmB,QAAS,oKAAmCC,WAAY,IAChE,CAACpB,GAAI,EAAGmB,QAAS,oKAAmCC,WAAY,KAEpEG,YAAa,IA6BFC,EA1BQ,WAAmC,IAAlChB,EAAiC,uDAAzBa,EAAcI,EAAW,uCACrD,OAAQA,EAAOC,MACX,IAbS,WAgBL,OAFAlB,EAAMc,MAAMK,KAAK,CAAC3B,GAAI,EAAGmB,QAASX,EAAMe,YAAaH,WAAY,IACjEZ,EAAMe,YAAc,GACbf,EACX,IAhBqB,uBAkBjB,OADAA,EAAMe,YAAcE,EAAOG,QACpBpB,EACX,QACI,OAAOA,ICuBJqB,MAtCf,SAAe/B,GAEX,IAAIgC,EAAgBC,IAAMC,YAatBC,EAAenC,EAAMoC,YAAYZ,MAAMX,KAAI,SAAAwB,GAAC,OAAI,kBAAC,EAAD,CAAMhB,QAASgB,EAAEhB,QAASC,WAAYe,EAAEf,gBAC5F,OACI,yBAAK1B,UAAWC,IAAOyC,YACnB,wCACA,6BACI,6BACI,8BAAU/B,KAAK,GAAGL,GAAG,GAAGqC,KAAK,KAAKC,KAAK,KAAKC,IAAKT,EACvCU,SAbZ,WACV,IAAIC,EAAOX,EAAeY,QAAQC,MAElC7C,EAAM8C,kBAAkBH,IAWFE,MAAO7C,EAAMoC,YAAYX,eAGvC,6BACI,4BAAQsB,QAvBV,WAEV/C,EAAMgD,YAqBM,eAIR,yBAAKpD,UAAWC,IAAO2B,OAClBW,K,iBCpBFc,MAbf,WACI,OACI,6BACI,yBAAKrD,UAAWC,IAAOqD,OAAO,yBAC1B7C,IAAI,mFACJe,IAAI,MACR,yBAAKxB,UAAWC,IAAOsD,kBAAvB,qBCmBGC,MAvBf,SAAwBpD,GAGpB,IAAIU,EAAQV,EAAMqD,MAAMC,WAaxB,OACI,6BACI,kBAAC,EAAD,CAAOR,kBAVD,SAACH,GAEX3C,EAAMqD,MAAME,SHc0B,SAACZ,GAC3C,MAAO,CACHf,KAhCqB,uBAgCOE,QAASa,GGhBhBa,CAA+Bb,KAQbK,QAd7B,WACVhD,EAAMqD,MAAME,SHcT,CACH3B,KA3BS,cGyBgDQ,YAAa1B,EAAM0B,gBCFrEqB,MAhBf,SAAiBzD,GAEb,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAgBqD,MAAOrD,EAAMqD,U,gBCTrC9B,EAAe,CAEfZ,YAAa,CACT,CAACT,GAAI,EAAGK,KAAM,2BAAQD,IAAK,oDAC3B,CAACJ,GAAI,EAAGK,KAAM,uCAAUD,IAAK,uDAC7B,CACIJ,GAAI,EACJK,KAAM,uCACND,IAAK,gFAET,CAACJ,GAAI,EAAGK,KAAM,2BAAQD,IAAK,uDAC3B,CACIJ,GAAI,EACJK,KAAM,2BACND,IAAK,qGAET,CAACJ,GAAI,EAAGK,KAAM,uCAAUD,IAAK,4DAEjCoD,aAAc,CACV,CAACxD,GAAI,EAAGyD,MAAO,EAAGtC,QAAS,8EAC3B,CAACnB,GAAI,EAAGyD,MAAO,EAAGtC,QAAS,oEAC3B,CAACnB,GAAI,EAAGyD,MAAO,EAAGtC,QAAS,2HAC3B,CAACnB,GAAI,EAAGyD,MAAO,EAAGtC,QAAS,yEAC3B,CAACnB,GAAI,EAAGyD,MAAO,EAAGtC,QAAS,2FAC3B,CAACnB,GAAI,EAAGyD,MAAO,EAAGtC,QAAS,iIAC3B,CAACnB,GAAI,EAAGyD,MAAO,EAAGtC,QAAS,mIAC3B,CAACnB,GAAI,EAAGyD,MAAO,EAAGtC,QAAS,yDAG/BuC,eAAgB,IA6BLC,EA1BQ,WAAmC,IAAlCnD,EAAiC,uDAAzBa,EAAcI,EAAW,uCACrD,OAAQA,EAAOC,MACX,IArCwB,0BAuCpB,OADAlB,EAAMkD,eAAiBjC,EAAOG,QACvBpB,EACX,IAvCa,eA0CT,OAFAA,EAAMgD,aAAa7B,KAAK,CAAC3B,GAAI,EAAGyD,MAAO,EAAGtC,QAASX,EAAMkD,iBACzDlD,EAAMkD,eAAiB,GAChBlD,EACX,QACI,OAAOA,ICtCboD,EAAa,SAAC9D,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKN,UAAWC,IAAOkE,YAAY,kBAAC,IAAD,CAAS3D,GAAIH,GAAM,yBAAKI,IAAKL,EAAMM,MAAON,EAAMO,QAIrFyD,EAAU,SAAChE,GACb,OAAoB,IAAhBA,EAAM2D,MACC,yBAAK/D,UAAWC,IAAOoE,UAAWjE,EAAMqB,SAG3C,yBAAKzB,UAAWC,IAAOqE,UAAWlE,EAAMqB,UA6CrC8C,MAxCf,SAAiBnE,GAEb,IAAIU,EAAQV,EAAMU,MAEd0D,EAAkB1D,EAAMC,YAAYE,KAAI,SAAAC,GAAM,OAAI,kBAAC,EAAD,CAAYP,KAAMO,EAAOP,KAAML,GAAIY,EAAOZ,GAClBI,IAAKQ,EAAOR,SAEtF+D,EAAkB3D,EAAMgD,aAAa7C,KAAI,SAAAQ,GAAO,OAAI,kBAAC,EAAD,CAASA,QAASA,EAAQA,QACLnB,GAAImB,EAAQnB,GACZyD,MAAOtC,EAAQsC,WAa5F,OAEI,yBAAK/D,UAAWC,IAAOyE,SACnB,yBAAK1E,UAAWC,IAAO0E,cAClBH,GAEL,yBAAKxE,UAAWC,IAAO2E,UAClBH,EACD,yBAAKzE,UAAWC,IAAO4E,cACnB,2BAAO7C,KAAK,OAAOc,SAhBrB,SAACgC,GACX,IAAI5C,EAAU4C,EAAEC,OAAO9B,MAEvB7C,EAAM8B,QAAQA,IAaoCe,MAAOnC,EAAMkD,iBACnD,4BAAQb,QAtBN,WAEd/C,EAAM4E,gBAoBM,Y,aC5CLC,MATf,WACI,OAEI,0C,MCMOC,MATf,WACI,OAEI,uC,MCMOC,MATf,WACI,OAEI,sCCHJ1B,EAAQ,CACR2B,OAAQ,CACJ5C,YAAa,CACTZ,MAAO,CACH,CAACtB,GAAI,EAAGmB,QAAS,oKAAmCC,WAAY,IAChE,CAACpB,GAAI,EAAGmB,QAAS,oKAAmCC,WAAY,KAEpEG,YAAa,IAGjBwD,aAAc,CACVtE,YAAa,CACT,CAACT,GAAI,EAAGK,KAAM,2BAAQD,IAAK,oDAC3B,CAACJ,GAAI,EAAGK,KAAM,uCAAUD,IAAK,uDAC7B,CACIJ,GAAI,EACJK,KAAM,uCACND,IAAK,gFAET,CAACJ,GAAI,EAAGK,KAAM,2BAAQD,IAAK,uDAC3B,CACIJ,GAAI,EACJK,KAAM,2BACND,IAAK,qGAET,CAACJ,GAAI,EAAGK,KAAM,uCAAUD,IAAK,4DAEjCoD,aAAc,CACV,CAACxD,GAAI,EAAGyD,MAAO,EAAGtC,QAAS,8EAC3B,CAACnB,GAAI,EAAGyD,MAAO,EAAGtC,QAAS,oEAC3B,CAACnB,GAAI,EAAGyD,MAAO,EAAGtC,QAAS,2HAC3B,CAACnB,GAAI,EAAGyD,MAAO,EAAGtC,QAAS,yEAC3B,CAACnB,GAAI,EAAGyD,MAAO,EAAGtC,QAAS,2FAC3B,CAACnB,GAAI,EAAGyD,MAAO,EAAGtC,QAAS,iIAC3B,CAACnB,GAAI,EAAGyD,MAAO,EAAGtC,QAAS,mIAC3B,CAACnB,GAAI,EAAGyD,MAAO,EAAGtC,QAAS,yDAG/BuC,eAAgB,KAGxBsB,gBAzCQ,WA0CJC,QAAQC,IAAI,KAGhB9B,SA7CQ,WA8CJ,OAAO+B,KAAKL,QAGhBM,UAjDQ,SAiDEC,GACNF,KAAKH,gBAAkBK,GAG3BhC,SArDQ,SAqDC5B,GACL0D,KAAKL,OAAO5C,YAAcV,EAAe2D,KAAKL,OAAO5C,YAAaT,GAClE0D,KAAKL,OAAOC,aAAepB,EAAewB,KAAKL,OAAOC,aAActD,GAEpE0D,KAAKH,gBAAgBG,KAAKL,UAMlCQ,OAAOnC,MAAQA,EChBAoC,MA1Bf,SAA0BzF,GAUtB,IAAIU,EAAQV,EAAMqD,MAAMC,WAAW2B,aAanC,OAAO,kBAAC,EAAD,CAASL,YAXE,WACd5E,EAAMqD,MAAME,SNmBV,CACF3B,KAxDa,kBM8CyBE,QAP5B,SAACA,GAGX9B,EAAMqD,MAAME,SNOT,CACH3B,KAnDwB,0BAmDOE,QMRwBA,KAICpB,MAAOA,KCCxDgF,MAlCf,SAAa1F,GACT,OACI,kBAAC,IAAD,KACI,yBAAKJ,UAAWC,IAAO8F,SACnB,yBAAK/F,UAAWC,IAAOC,QAAQ,kBAAC,EAAD,OAC/B,yBAAKF,UAAWC,IAAO+F,QAAQ,kBAAC,EAAD,CAAQlF,MAAOV,EAAMU,MAAMuE,gBAC1D,yBAAKrF,UAAWC,IAAOgG,SACnB,kBAAC,IAAD,CAAO5F,KAAK,IAAI6F,OAAK,EAACC,OAAQ,kBAAM,kBAAC,EAAD,CAAS1C,MAAOrD,EAAMqD,WAM1D,kBAAC,IAAD,CAAOpD,KAAK,WAAW8F,OAAQ,kBAAM,kBAAC,EAAD,CAAS1C,MAAOrD,EAAMqD,WAO3D,kBAAC,IAAD,CAAOpD,KAAK,WAAW8F,OAAQ,kBAAM,kBAAC,EAAD,CACjC1C,MAAOrD,EAAMqD,WAIjB,kBAAC,IAAD,CAAOpD,KAAK,QAAQ+F,UAAWjB,IAC/B,kBAAC,IAAD,CAAO9E,KAAK,SAAS+F,UAAWlB,IAChC,kBAAC,IAAD,CAAO7E,KAAK,YAAY+F,UAAWnB,QC7BnCoB,QACW,cAA7BT,OAAOU,SAASC,UAEe,UAA7BX,OAAOU,SAASC,UAEhBX,OAAOU,SAASC,SAASC,MACvB,2D,YCdFC,EAAWC,YAAgB,CAC3BlE,YAAaV,EACbuD,aAAcpB,IAKFR,EAFJkD,YAAYF,GCDpBG,EAAoB,WACpBC,IAASV,OAAO,kBAAC,EAAD,CAAKrF,MAAO2C,EAAMC,WACbD,MAAOA,EAIPE,SAAUF,EAAME,SAASmD,KAAKrD,KAC/CsD,SAASC,eAAe,UAEhCJ,EAAmBnD,EAAMC,YAEzBD,EAAMiC,WAAU,WACAjC,EAAMC,WAClBkD,OF8GE,kBAAmBK,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.5e24301a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3rcgj\",\"dialogsImg\":\"Dialogs_dialogsImg__3WypZ\",\"dialogsItems\":\"Dialogs_dialogsItems__3wi_9\",\"active\":\"Dialogs_active__1VTte\",\"dialog\":\"Dialogs_dialog__1lJm5\",\"messages\":\"Dialogs_messages__3RXQg\",\"message1\":\"Dialogs_message1__1R7X9\",\"message2\":\"Dialogs_message2__3OXyM\",\"inputDialogs\":\"Dialogs_inputDialogs__3jmQN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBarStyles\":\"Navbar_navBarStyles__1HO8Q\",\"active\":\"Navbar_active__1_S7e\",\"navBarFriends\":\"Navbar_navBarFriends__3ENXJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__1IN4D\",\"header\":\"App_header__3TxXZ\",\"navbar\":\"App_navbar__2xO37\",\"profile\":\"App_profile__1fxKO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"Posts_postsBlock__2Rt0W\",\"posts\":\"Posts_posts__21F0O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ProfileInfo_image__1ySrx\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1xJYK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__10vCM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3_Uyw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"Profile_image__1o_7x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Settings_header__dmMNI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Music_header__3Tb1d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"News_header__1FWpp\"};","import React from 'react';\nimport styles from './Header.module.css'\n\nfunction Header() {\n    return (\n        <header className={styles.header}>\n\n        </header>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport styles from './Navbar.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nconst Friends = (props) => {\n    let path = \"/dialogs/\" + props.id;\n    return (\n        <div className={styles.navBarFriends}><NavLink to={path}><img src={props.img}/>{props.name}</NavLink></div>\n    )\n};\n\nfunction Navbar(props) {\n    let bestFriendsTop3= props.state.dialogsData.slice(0,3);\n    let bestFriends = bestFriendsTop3.map(dialog => <Friends name={dialog.name} id={dialog.id} img={dialog.img}/>);\n\n\n    return (\n        <div className={styles.navBarStyles}>\n            <div><NavLink to=\"/profile\" activeClassName={styles.active}> Profile</NavLink></div>\n            <div><NavLink to=\"/dialogs\" activeClassName={styles.active}> Messages</NavLink></div>\n            <div><NavLink to=\"/news\" activeClassName={styles.active}>News</NavLink></div>\n            <div><NavLink to=\"/music\" activeClassName={styles.active}> Music</NavLink></div>\n            <div><NavLink to=\"/settings\" activeClassName={styles.active}> Settings</NavLink></div>\n            <div> </div>\n            <div><NavLink to=\"/friends\" activeClassName={styles.active}> Friends {bestFriends}</NavLink></div>\n\n\n        </div>\n    );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport styles from './Post.module.css'\n\n\nfunction Post(props) {\n    return (\n        <div className={styles.post}>\n            <img\n                src=\"https://s1.stc.all.kpcdn.net/putevoditel/projectid_103889/images/tild3266-6236-4266-b833-393539393436__cat-3601092_1280.jpg\"\n                alt=\"\"/>\n            {props.message}\n            <br/>\n            <span>likes: </span>{props.likesCount}\n        </div>\n    );\n}\n\nexport default Post;\n","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Пусть это будет мой первый пост', likesCount: 23},\r\n        {id: 2, message: 'Пусть это будет мой второй пост', likesCount: 32}\r\n    ],\r\n    newPostText: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            state.posts.push({id: 3, message: state.newPostText, likesCount: 0});\r\n            state.newPostText = '';\r\n            return state;\r\n        case UPDATE_NEW_POST_TEXT:\r\n            state.newPostText = action.newText;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = () => {\r\n    return {\r\n        type: ADD_POST\r\n    }\r\n};\r\n\r\nexport const updateNewPostTextActionCreator = (text) => {\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT, newText: text\r\n    }\r\n};\r\n\r\nexport default profileReducer;","import React from 'react';\nimport styles from './Posts.module.css'\nimport Post from \"./post/Post\";\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../Redux/profile-reducer\";\n\n\nfunction Posts(props) {\n\n    let newPostElement =React.createRef();\n\n    let addPost = ()=>{\n        // props.dispatch(addPostActionCreator())\n        props.addPost()\n    };\n\n    let newText = ()=>{\n        let text = newPostElement.current.value;\n        // props.dispatch(updateNewPostTextActionCreator(text))\n        props.updateNewPostText(text)\n    };\n\n    let postElements = props.profilePage.posts.map(p => <Post message={p.message} likesCount={p.likesCount} />);\n    return (\n        <div className={styles.postsBlock}>\n            <h3>my posts</h3>\n            <div>\n                <div>\n                    <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\" ref={newPostElement}\n                              onChange={newText}\n                              value={props.profilePage.newPostText}\n                    />\n                </div>\n                <div>\n                    <button onClick={addPost}>send post</button>\n                </div>\n\n            </div>\n            <div className={styles.posts}>\n                {postElements}\n            </div>\n        </div>\n    );\n}\n\nexport default Posts;\n","import React from 'react';\nimport styles from './ProfileInfo.module.css'\n\n\n\nfunction ProfileInfo() {\n    return (\n        <div>\n            <div className={styles.image}><img\n                src=\"https://www.thewowstyle.com/wp-content/uploads/2015/03/Desktop-Wallpaper-HD2.jpg\"\n                alt=\"\"/></div>\n            <div className={styles.descriptionBlock}>ava+description</div>\n        </div>\n\n\n    );\n}\n\nexport default ProfileInfo;\n","import React from 'react';\nimport styles from './Posts.module.css'\nimport Post from \"./post/Post\";\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../Redux/profile-reducer\";\nimport Posts from \"./Posts\";\n\n\nfunction PostsContainer(props) {\n\n    // let newPostElement = React.createRef();\n    let state = props.store.getState();\n    let addPost = () => {\n        props.store.dispatch(addPostActionCreator())\n    };\n\n    let newText = (text) => {\n        // let text = newPostElement.current.value;\n        props.store.dispatch(updateNewPostTextActionCreator(text))\n    };\n\n    // let postElements = props.store.profilePage.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>);\n\n\n    return (\n        <div>\n            <Posts updateNewPostText={newText} addPost={addPost} profilePage={state.profilePage}/>\n        </div>\n    );\n}\n\nexport default PostsContainer;\n","import React from 'react';\nimport styles from './Profile.module.css'\nimport Posts from \"./myposts/Posts\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport PostsContainer from \"./myposts/PostsContainer\";\n\n\nfunction Profile(props) {\n    debugger\n    return (\n        <div>\n            <ProfileInfo />\n            <PostsContainer store={props.store}\n                // profilePage={props.profilePage}\n                   // addPost={props.addPost}\n                   // updateNewPostText={props.updateNewPostText}\n                   // dispatch={props.dispatch}\n            />\n\n        </div>\n    );\n}\n\nexport default Profile;\n","const UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n\r\n    dialogsData: [\r\n        {id: 1, name: 'Тоха', img: \"https://i.ytimg.com/vi/mK72EwuxZAU/hqdefault.jpg\"},\r\n        {id: 2, name: 'Марина', img: \"https://rozetked.me/images/uploads/dwoilp3BVjlE.jpg\"},\r\n        {\r\n            id: 3,\r\n            name: 'Андрей',\r\n            img: 'https://i.pinimg.com/originals/36/fd/c3/36fdc3549189dd354acc8d4b2615c571.jpg'\r\n        },\r\n        {id: 4, name: 'Жора', img: 'https://rozetked.me/images/uploads/dwoilp3BVjlE.jpg'},\r\n        {\r\n            id: 5,\r\n            name: 'Вася',\r\n            img: 'https://ichef.bbci.co.uk/news/410/cpsprodpb/14236/production/_104368428_gettyimages-543560762.jpg'\r\n        },\r\n        {id: 6, name: 'Виктор', img: 'https://www.fresher.ru/wp-content/uploads/2018/03/1.jpg'},\r\n    ],\r\n    messagesData: [\r\n        {id: 1, mesid: 1, message: 'еуеу, мазафака'},\r\n        {id: 2, mesid: 1, message: 'хау а ю дуинг?'},\r\n        {id: 3, mesid: 1, message: 'вери из май факинг мани?'},\r\n        {id: 3, mesid: 2, message: 'ай хэв но мани'},\r\n        {id: 3, mesid: 2, message: 'ай хэв онли лапки'},\r\n        {id: 3, mesid: 2, message: 'бат ай кан ирн сом вискас'},\r\n        {id: 3, mesid: 1, message: 'кэн ю бринг ме сом зис щит?'},\r\n        {id: 3, mesid: 2, message: 'ок, бро, мяу'},\r\n    ],\r\n\r\n    newMessageText: \"\"\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_TEXT:\r\n            state.newMessageText = action.newText;\r\n            return state;\r\n        case SEND_MESSAGE:\r\n            state.messagesData.push({id: 4, mesid: 2, message: state.newMessageText});\r\n            state.newMessageText = '';\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const updateNewMessageTextActionCreator = (text) => {\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE_TEXT, newText: text\r\n    };\r\n};\r\n\r\nexport const sendMessageActionCreator = ()=>{\r\n    return{\r\n        type: SEND_MESSAGE\r\n    }\r\n};\r\n\r\nexport default dialogsReducer;","import React from 'react';\nimport styles from './Dialogs.module.css'\nimport {NavLink} from \"react-router-dom\";\nimport {sendMessageActionCreator, updateNewMessageTextActionCreator} from \"../../Redux/dialogs-reducer\";\n\n\n\nconst DialogItem = (props) => {\n    let path = \"/dialogs/\" + props.id;\n    return (\n        <div className={styles.dialogsImg}><NavLink to={path}><img src={props.img}/>{props.name}</NavLink></div>\n    )\n};\n\nconst Message = (props) => {\n    if (props.mesid === 1) {\n        return <div className={styles.message1}>{props.message}</div>\n    } else {\n        return (\n            <div className={styles.message2}>{props.message}</div>\n        )\n    }\n};\n\nfunction Dialogs(props) {\n\n    let state = props.state\n\n    let dialogsElements = state.dialogsData.map(dialog => <DialogItem name={dialog.name} id={dialog.id}\n                                                                                  img={dialog.img}/>);\n\n    let messageElements = state.messagesData.map(message => <Message message={message.message}\n                                                                                 id={message.id}\n                                                                                 mesid={message.mesid}/>);\n    let sendMessage = () => {\n        // props.dispatch(sendMessageActionCreator())\n        props.sendMessage();\n    };\n\n    let newText = (e) => {\n        let newText = e.target.value;\n        // props.dispatch(updateNewMessageTextActionCreator(newText))\n        props.newText(newText)\n    };\n\n\n    return (\n\n        <div className={styles.dialogs}>\n            <div className={styles.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={styles.messages}>\n                {messageElements}\n                <div className={styles.inputDialogs}>\n                    <input type=\"text\" onChange={newText} value={state.newMessageText}/>\n                    <button onClick={sendMessage}>Send</button>\n                </div>\n\n            </div>\n        </div>\n    );\n}\n\nexport default Dialogs;\n","import React from 'react';\nimport styles from './Settings.module.css'\n\nfunction Settings() {\n    return (\n\n        <div>\nSettings\n        </div>\n    );\n}\n\nexport default Settings;\n","import React from 'react';\nimport styles from './Music.module.css'\n\nfunction Music() {\n    return (\n\n        <div>\nMusic\n        </div>\n    );\n}\n\nexport default Music;\n","import React from 'react';\nimport styles from './News.module.css'\n\nfunction News() {\n    return (\n\n        <div>\n            News\n        </div>\n    );\n}\n\nexport default News;\n\n\n","import profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\n\r\nlet store = {\r\n    _state: {\r\n        profilePage: {\r\n            posts: [\r\n                {id: 1, message: 'Пусть это будет мой первый пост', likesCount: 23},\r\n                {id: 2, message: 'Пусть это будет мой второй пост', likesCount: 32}\r\n            ],\r\n            newPostText: ''\r\n        },\r\n\r\n        messagesPage: {\r\n            dialogsData: [\r\n                {id: 1, name: 'Тоха', img: \"https://i.ytimg.com/vi/mK72EwuxZAU/hqdefault.jpg\"},\r\n                {id: 2, name: 'Марина', img: \"https://rozetked.me/images/uploads/dwoilp3BVjlE.jpg\"},\r\n                {\r\n                    id: 3,\r\n                    name: 'Андрей',\r\n                    img: 'https://i.pinimg.com/originals/36/fd/c3/36fdc3549189dd354acc8d4b2615c571.jpg'\r\n                },\r\n                {id: 4, name: 'Жора', img: 'https://rozetked.me/images/uploads/dwoilp3BVjlE.jpg'},\r\n                {\r\n                    id: 5,\r\n                    name: 'Вася',\r\n                    img: 'https://ichef.bbci.co.uk/news/410/cpsprodpb/14236/production/_104368428_gettyimages-543560762.jpg'\r\n                },\r\n                {id: 6, name: 'Виктор', img: 'https://www.fresher.ru/wp-content/uploads/2018/03/1.jpg'},\r\n            ],\r\n            messagesData: [\r\n                {id: 1, mesid: 1, message: 'еуеу, мазафака'},\r\n                {id: 2, mesid: 1, message: 'хау а ю дуинг?'},\r\n                {id: 3, mesid: 1, message: 'вери из май факинг мани?'},\r\n                {id: 3, mesid: 2, message: 'ай хэв но мани'},\r\n                {id: 3, mesid: 2, message: 'ай хэв онли лапки'},\r\n                {id: 3, mesid: 2, message: 'бат ай кан ирн сом вискас'},\r\n                {id: 3, mesid: 1, message: 'кэн ю бринг ме сом зис щит?'},\r\n                {id: 3, mesid: 2, message: 'ок, бро, мяу'},\r\n            ],\r\n\r\n            newMessageText: \"\"\r\n        }\r\n    },\r\n    _callSubscriber() {\r\n        console.log(\"\")\r\n    },\r\n\r\n    getState() {\r\n        return this._state\r\n    },\r\n\r\n    subscribe(observer) {\r\n        this._callSubscriber = observer;\r\n    },\r\n\r\n    dispatch(action) {\r\n        this._state.profilePage = profileReducer(this._state.profilePage, action);\r\n        this._state.messagesPage = dialogsReducer(this._state.messagesPage, action);\r\n\r\n        this._callSubscriber(this._state);\r\n    }\r\n};\r\n\r\n\r\nexport default store;\r\nwindow.store = store;","import React from 'react';\nimport styles from './Dialogs.module.css'\nimport {NavLink} from \"react-router-dom\";\nimport {sendMessageActionCreator, updateNewMessageTextActionCreator} from \"../../Redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\n\n\n// const DialogItem = (props) => {\n//     let path = \"/dialogs/\" + props.id;\n//     return (\n//         <div className={styles.dialogsImg}><NavLink to={path}><img src={props.img}/>{props.name}</NavLink></div>\n//     )\n// };\n//\n// const Message = (props) => {\n//     if (props.mesid === 1) {\n//         return <div className={styles.message1}>{props.message}</div>\n//     } else {\n//         return (\n//             <div className={styles.message2}>{props.message}</div>\n//         )\n//     }\n// };\n\nfunction DialogsContainer(props) {\n\n    //\n    // let dialogsElements = props.messagePage.dialogsData.map(dialog => <DialogItem name={dialog.name} id={dialog.id}\n    //                                                                               img={dialog.img}/>);\n    //\n    // let messageElements = props.messagePage.messagesData.map(message => <Message message={message.message}\n    //                                                                              id={message.id}\n    //                                                                              mesid={message.mesid}/>);\n\n    let state = props.store.getState().messagesPage;\n\n    let sendMessage = () => {\n        props.store.dispatch(sendMessageActionCreator())\n    };\n\n    let newText = (newText) => {\n        // let newText = e.target.value;\n\n        props.store.dispatch(updateNewMessageTextActionCreator(newText))\n    };\n\n\n    return <Dialogs sendMessage={sendMessage} newText={newText} state={state}/>\n}\n\nexport default DialogsContainer;\n","import React from 'react';\nimport styles from './App.module.css';\nimport Header from \"./components/header/Header\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport Profile from \"./components/profile/Profile\";\nimport Dialogs from \"./components/Dialogs/Dialogs\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport Settings from \"./components/Settings/Settings\";\nimport Music from \"./components/Music/Music\";\nimport News from \"./components/News/News\";\nimport {updateNewPostText} from \"./Redux/store\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\n\n\nfunction App(props) {\n    return (\n        <BrowserRouter>\n            <div className={styles.wrapper}>\n                <div className={styles.header}><Header/></div>\n                <div className={styles.navbar}><Navbar state={props.state.messagesPage}/></div>\n                <div className={styles.profile}>\n                    <Route path='/' exact render={() => <Profile store={props.store}\n                        // profilePage={props.state.profilePage}\n                        // addPost={props.addPost}\n                        // updateNewPostText={props.updateNewPostText}\n                        //                                          dispatch={props.dispatch}\n                    />}/>\n                    <Route path='/profile' render={() => <Profile store={props.store}\n                        // profilePage={props.state.profilePage}\n\n                        // addPost={props.addPost}\n                        // updateNewPostText={props.updateNewPostText}\n                        //                                           dispatch={props.dispatch}\n                    />}/>\n                    <Route path='/dialogs' render={() => <DialogsContainer\n                        store={props.store}\n                        // messagePage={props.state.messagesPage}\n                        // dispatch={props.dispatch}\n                    />}/>\n                    <Route path='/news' component={News}/>\n                    <Route path='/music' component={Music}/>\n                    <Route path='/settings' component={Settings}/>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers, createStore} from \"redux\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: dialogsReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\n export default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './Redux/redux-store'\n\n\nlet rerenderEntireTree =()=> {\n    ReactDOM.render(<App state={store.getState()}\n                         store={store}\n\n                         // addPost={store.addPost.bind(store)}\n                         // updateNewPostText={store.updateNewPostText.bind(store)}\n                         dispatch={store.dispatch.bind(store)}\n    />, document.getElementById('root'))\n};\nrerenderEntireTree(store.getState());\n\nstore.subscribe(()=>{\n    let state = store.getState();\n    rerenderEntireTree(state)});\n\nserviceWorker.unregister();\n"],"sourceRoot":""}